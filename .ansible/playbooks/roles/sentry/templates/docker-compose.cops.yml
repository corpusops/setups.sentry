---
version: '3.4'
x-env-defaults: &img_defaults
  redis: &env_redis
    REDIS_PASSWORD: "{{cops_sentry_redis_password}}"
  postgres: &env_postgres
    POSTGRESQL_PASSWORD: "{{cops_sentry_db_password}}"
    POSTGRESQL_DB: "{{cops_sentry_db_name}}"
    POSTGRESQL_USER: "{{cops_sentry_db_user}}"
    PGDATA: /var/lib/postgresql/data/pgdata
  sentry: &env_sentry
    <<: [ *env_postgres, *env_redis]
    SENTRY_BROKER_URL: "redis://:{{cops_sentry_redis_password}}@redis:6379/0"
    SENTRY_MEMCACHED_HOST: "memcached"
    SENTRY_SINGLE_ORGANIZATION: "False"
    SENTRY_USE_SSL: "{{cops_sentry_use_ssl}}"
  smtp: &env_smtp
    RELAY_POSTMASTER: "postmaster@{{cops_sentry_email_relay_domain}}"
    RELAY_MYHOSTNAME: "{{cops_sentry_email_relay_domain}}"
    RELAY_MYDOMAIN: "{{cops_sentry_email_relay_domain}}"
    RELAY_MYNETWORKS: "127.0.0.0/8 10.0.0.0/8 192.168.0.0/16 172.16.0.0/12"
    RELAY_HOST: "[{{cops_sentry_email_server}}]:{{cops_sentry_email_server_port}}"
    RELAY_MODE: "ALLOW_AUTH_NODOMAIN"
    RELAY_STRICT_SENDER_MYDOMAIN: "false"
    RELAY_LOGIN: "{{cops_sentry_email_username}}"
    RELAY_PASSWORD: "{{cops_sentry_email_password}}"
    RELAY_USE_TLS: "no"
    RELAY_EXTRAS_SETTINGS: "compatibility_level=1"
x-defaults: &defaults
  environment: { <<:  *env_sentry }
  volumes:
  - 'sentry-data:/var/lib/sentry/files'
  - 'sentry-data:/data'
  - './sentry/config.yml:/usr/src/sentry/config.yml'
  - './sentry/sentry.conf.py:/usr/src/sentry/sentry.conf.py'
  - './sentry/sentry.conf.py:/etc/sentry/sentry.conf.py'
  - './sentry/config.yml:/etc/sentry/config.yml'
services:
  nginx:
    ports:
    {% for i in cops_sentry_ports %}
    - '127.0.0.1:{{i}}:80'
    {% endfor %}
  web:
    <<: [ *defaults ]
  worker:
    environment: { <<: *env_sentry }
  cron:
    environment: { <<: *env_sentry }
  backup:
    environment: { <<: *env_postgres }
    image: corpusops/dbsmartbackup:postgres-10
    restart: unless-stopped
    volumes:
    - backupdb-dumps:/var/db_smart_backup/
    - backupdb-logs:/var/db_smart_backup/logs/
  postgres:
    environment: { <<: *env_postgres }
  redis:
    environment: { <<: *env_redis }
    cap_add:
    - sys_resource
  kafka:
    environment:
      KAFKA_MESSAGE_MAX_BYTES: 250000000
      KAFKA_MAX_REQUEST_SIZE:  250000000
  memcached:
    environment: { <<: *env_sentry }
  smtp:
    image: "turgon37/smtp-relay"
    environment: { <<: *env_smtp }
    volumes:
    - 'sentry-smtp:/data'
volumes:
  backupdb-logs:
  backupdb-dumps:
